
.. _networkDashboardLink: https://dashboard.testnet.concordium.com/
.. _node-dashboard: http://localhost:8099
.. _Discord: https://discord.com/invite/xWmQ5tp

.. _become-a-baker:

==================================
Zostań piekarzem (twórz bloki)
==================================

.. contents::
   :local:
   :backlinks: none
   
Ta sekcja wyjaśnia, czym jest piekarz, jego rolę w sieci i jak nią zostać.

Czytając tę sekcję, dowiesz się:

-  Co to jest piekarz i pokrewne pojęcia do tego.
-  Jak ulepszyć swój węzeł(node), aby zostać piekarzem.

Proces zostania piekarzem można podsumować w następujących krokach:

#. Zdobądź konto i niektóre GTUs.
#. Zdobądź zestaw kluczy do piekarza.
#. Zarejestruj klucze piekarza na koncie.
#. Uruchom węzeł(node) za pomocą klawiszy piekarza.

Po wykonaniu tych czynności, węzeł(node) piekarza będzie piec bloki. Jeśli upieczony blok
jest dodawany do łańcucha piekarz węzła(node) otrzyma nagrodę.

.. note::

   W tej sekcji użyjemy nazwy ``bakerAccount`` jako nazwa
   konto które posłużą do zarejestrowania piekarza i zarządzania nim.

Definicje
===========

Piekarz
-----

Węzeł(node) to *piekarz* (lub *pieczenie*) kiedy aktywnie uczestniczy w
sieć tworząc nowe bloki, które są dodawane do łańcucha. Piekarz zbiera,
Orders i uprawomocnić the transakcje które są zawarte w bloku utrzymać
integralność łańcucha bloków. Piekarz podpisuje każdy blok że oni piec 
więc że blok można sprawdzić i wykonany przez resztę uczestników
sieć.

Piekarz Klucze
----------

Każdy piekarz ma zestaw kluczy kryptograficznych nazywa *Piekarz Klucze*. Węzeł(node) używa
te klucze podpisać bloki, które piecze. W celu wypieku bloków sygnowanych przez a
konkretnego piekarza węzeł(node) musi działać z załadowanym zestawem kluczy piekarza.

Konto Piekarz 
-------------

Każde konto może używać zestawu kluczy piekarza do rejestracji piekarza.

Kiedy tylko Piekarz piecze prawidłowy blok, który zostanie włączony do łańcucha, po jakimś
czas nagroda jest wypłacana na powiązane konto.

Stawka i loteria
-----------------

.. todo::

   - Link to release schedule.

Konto może postawić część swojego salda GTU na *stake piekarza*, a później może ręcznie
zwolnić całość lub część postawionej kwoty. Postawiona kwota nie może zostać przesunięta 
ani przeniesiona, dopóki nie zostanie zwolniona przez piekarza.

.. note::

   Jeśli konto posiada kwotę, która została przekazana z harmonogramem wydań,
   kwota może zostać stake, nawet jeśli nie została jeszcze zwolniona.

aby być wybranym do pieczenia bloku, piekarz musi uczestniczyć w
*loteria* w którym prawdopodobieństwo otrzymania zwycięskiego kuponu jest przybliżone
proporcjonalny do postawionej kwoty.

Ta sama stake jest używana przy obliczaniu, czy piekarz zostanie uwzględniony w finalizacji
komitet albo nie. Widzieć Finalizaji_.

.. _epoki-i-sloty:

Epoki i sloty
----------------

W Concordium blockchain, czas jest podzielony na *sloty*.Sloty mieć czas
czas trwania ustalony w bloku Genesis. na dowolnym oddziale, każdy slot może mieć 
w najbardziej jeden blok, ale wiele bloków na różnych gałęziach można wytworzony w
ten sam slot.

.. todo::

   Let's add a picture.

Gdy rozważając nagrody i inne pieczenie-związane z koncepcje, Używamy the
koncepcja *epoki* jako jednostka czasu definiująca okres w którym zestaw
obecnych piekarzy i stake są ustalone. Epoki mieć czas Trwanie naprawione na
Blok Genesis. w testnet, epoki mają czas trwania z **1 hour**.

Rozpocznij pieczenie
============

Zarządzanie kontami
-----------------

Ta sekcja zapewnia krótkie podsumowanie odpowiednich kroków, dla Importowanie konto. 
Aby uzyskać pełny opis, widzieć :ref:`managing_accounts`.

Konta są tworzone przy użyciu :ref:`concordium_id` aplikacja. Kiedyś konto 
pomyślnie utworzony, nawigacja do the **więcej** tab i wybór **Eksport**
pozwala Ci aby uzyskać plik JSON zawierające informacje o koncie.

Aby zaimportować konto do łańcucha narzędzi uruchom

.. code-block:: console

   $concordium-client config account import <path/to/exported/file> --name bakerAccount

``concordium-client`` zapyta o hasło, aby odszyfrować wyeksportowany plik i zaimportować wszystkie konta.
To samo hasło będzie używane do szyfrowania kluczy podpisywania transakcji i zaszyfrowanego klucza transferów.

Tworzenie kluczy dla piekarza i rejestracyjny tego
--------------------------------------------

.. note::

   Do tego procesu konto musi posiadać jakąś GTU więc upewnij się zażądać the
   100 GTU upuść na konto w aplikacji mobilnej.

Każde konto ma unikalny identyfikator piekarza który jest używany podczas rejestracji piekarza. To
Identyfikator musi zostać dostarczony przez sieć i obecnie nie można go wstępnie obliczyć.
Ten identyfikator należy podać wewnątrz kluczy piekarza do węzła, aby mógł on używać kluczy
piekarza do tworzenia bloków. The ``concordium-client`` automatycznie wypełni to 
pole podczas wykonywania poniższych operacji.

Aby utworzyć nowy zestaw kluczy, uruchom:

.. code-block:: console

   $concordium-client baker generate-keys <keys-file>.json

gdzie możesz wybrać nieprzewidywalną nazwę na klucze plik. Do
zarejestrować klucze w sieci musisz być :ref:`bieganie węzeł(node) <running-a-node>`
i wyślij ``piekarz dodaj`` transakcja do sieci:

.. code-block:: console

   $concordium-client baker add <keys-file>.json --sender bakerAccount --stake <amountToStake> --out <concordium-data-dir>/baker-credentials.json

będzie zastąpiony

- ``<amountToStake>`` z kwotą GTU for the baker's stawka początkowa.
- ``<concordium-data-dir>`` z następującym katalogiem danych:

  * on Linux and MacOS: ``~/.local/share/concordium``
  * on Windows: ``%LOCALAPPDATA%\\concordium``.

(Nazwa pliku wyjściowego powinna pozostać ``baker-credentials.json``).

Zapewnij ``--no-restake`` flaga, której należy unikać automatyczne dodawanie
nagrody do postawiona kwota na piekarzu. To zachowanie jest opisane w
Sekcja `Restaking the earnings`_.

w celu uruchomić węzeł tym kluczem piekarzas i zacznij produkować bloki 
najpierw musisz zamknąć aktualnie działający węzeł (albo naciskając
``Ctrl + C`` na terminalu gdzie jest węzeł(node) bieganie lub używając
``concordium-node-stop`` wykonywalny).

Po umieszczeniu pliku w odpowiednim katalogu (już zrobione w
poprzednie polecenie podczas określania pliku wyjściowego), start węzeł(node) ponownie używając
``concordium-node``. Węzeł(node) automatycznie rozpocząć pieczenie kiedy piekarz
dostaje zawarte w piekarzach dla bieżącej epoki.

Ta zmiana zostanie wykonana
natychmiast i zacznie obowiązywać, kiedy wykończeniowy epoka po w którym
transakcja za dodanie piekarza był zawarty w bloku.

.. table:: Oś czasu: dodanie piekarza

   +-------------------------------------------+-----------------------------------------+-----------------+
   |                                           | When transaction is included in a block | After 2 epochs  |
   +===========================================+=========================================+=================+
   | Change is visible by querying the node    |  ✓                                      |                 |
   +-------------------------------------------+-----------------------------------------+-----------------+
   | Baker is included in the baking committee |                                         | ✓               |
   +-------------------------------------------+-----------------------------------------+-----------------+

.. note::

   Jeśli transakcja za dodanie piekarza został zawarty w bloku w czasie epoki `E`, piekarz będzie brany pod uwagę
   jako część komitetu pieczenia w epoce
   `E+2` starts.

Zarządzający piekarz
==================

Sprawdzanie statusu piekarza i jego moc loterii
------------------------------------------------------

W celu zobacz, czy węzeł(node) się piecze, możesz sprawdzić różne źródłas że
oferują różne stopnie precyzja w wyświetlanych informacjach.

- In the `network dashboard <http://dashboard.testnet.concordium.com>`_, your
  node will show its baker ID in the ``Baker`` column.
- Using the ``concordium-client`` you can check the list of current bakers
  and the relative staked amount that they hold, i.e. their lottery power.  The
  lottery power will determine how likely it is that a given baker will win the
  lottery and bake a block.

  .. code-block:: console

     $concordium-client consensus show-parameters --include-bakers
     Election nonce:      07fe0e6c73d1fff4ec8ea910ffd42eb58d5a8ecd58d9f871d8f7c71e60faf0b0
     Election difficulty: 4.0e-2
     Bakers:
                                  Account                       Lottery power
             ----------------------------------------------------------------
         ...
         34: 4p2n8QQn5akq3XqAAJt2a5CsnGhDvUon6HExd2szrfkZCTD4FX   <0.0001
         ...

- Using the ``concordium-client`` you can check that the account has
  registered a baker and the current amount that is staked by that baker.

  .. code-block:: console

     $./concordium-client account show bakerAccount
     ...

     Baker: #22
      - Staked amount: 10.000000 GTU
      - Restake earnings: yes
     ...

- If the staked amount is big enough and there is a node running with the baker
  keys loaded, that baker should eventually produce blocks and you can see
  in your mobile wallet that baking rewards are being received by the account,
  as seen in this image:

  .. image:: images/bab-reward.png
     :align: center
     :width: 250px

Updating the staked amount
--------------------------

To update the baker stake run

.. code-block:: console

   $concordium-client baker update-stake --stake <newAmount> --sender bakerAccount

Modifying the staked amount modifies the probability that a baker gets elected
to bake blocks.

When a baker **adds stake for the first time or increases their stake**, that
change is executed on the chain and becomes visible as soon as the transaction
is included in a block (can be seen through ``concordium-client account show
bakerAccount``) and takes effect 2 epochs after that.

.. table:: Timeline: increasing the stake

   +----------------------------------------+-----------------------------------------+----------------+
   |                                        | When transaction is included in a block | After 2 epochs |
   +========================================+=========================================+================+
   | Change is visible by querying the node | ✓                                       |                |
   +----------------------------------------+-----------------------------------------+----------------+
   | Baker uses the new stake               |                                         | ✓              |
   +----------------------------------------+-----------------------------------------+----------------+

When a baker **decreases the staked amount**, the change will need *2 +
bakerCooldownEpochs* epochs to take effect. The change becomes visible on the
chain as soon as the transaction is included in a block, it can be consulted through
``concordium-client account show bakerAccount``:

.. code-block:: console

   $concordium-client account show bakerAccount
   ...

   Baker: #22
    - Staked amount: 50.000000 GTU to be updated to 20.000000 GTU at epoch 261  (2020-12-24 12:56:26 UTC)
    - Restake earnings: yes

   ...

.. table:: Timeline: decreasing the stake

   +----------------------------------------+-----------------------------------------+----------------------------------------+
   |                                        | When transaction is included in a block | After *2 + bakerCooldownEpochs* epochs |
   +========================================+=========================================+========================================+
   | Change is visible by querying the node | ✓                                       |                                        |
   +----------------------------------------+-----------------------------------------+----------------------------------------+
   | Baker uses the new stake               |                                         | ✓                                      |
   +----------------------------------------+-----------------------------------------+----------------------------------------+
   | Stake can be decreased again or        | ✗                                       | ✓                                      |
   | baker can be removed                   |                                         |                                        |
   +----------------------------------------+-----------------------------------------+----------------------------------------+

.. note::

   In the testnet, ``bakerCooldownEpochs`` is set initially to 168 epochs. This
   value can be checked as follows:

   .. code-block:: console

      $concordium-client raw GetBlockSummary
      ...
              "bakerCooldownEpochs": 168
      ...

.. warning::

   As noted in the `Definitions`_ section, the staked amount is *locked*,
   i.e. it cannot be transferred or used for payment. You should take this
   into account and consider staking an amount that will not be needed in the
   short term. In particular, to deregister a baker or to modify the staked
   amount you need to own some non-staked GTU to cover the transaction
   costs.

Restaking the earnings
----------------------

When participating as a baker in the network and baking blocks, the account
receives rewards on each baked block. These rewards are automatically added to
the staked amount by default.

You can choose to modify this behavior and instead receive the rewards in
the account balance without staking them automatically. This switch can be
changed through ``concordium-client``:

.. code-block:: console

   $concordium-client baker update-restake False --sender bakerAccount
   $concordium-client baker update-restake True --sender bakerAccount

Changes to the restake flag will take effect immediately; however, the changes
start affecting baking and finalizing power in the epoch after next. The current
value of the switch can be seen in the account information which can be queried
using ``concordium-client``:

.. code-block:: console

   $concordium-client account show bakerAccount
   ...

   Baker: #22
    - Staked amount: 50.000000 GTU
    - Restake earnings: yes

   ...

.. table:: Timeline: updating restake

   +-----------------------------------------------+-----------------------------------------+-------------------------------+
   |                                               | When transaction is included in a block | 2 epochs after being rewarded |
   +===============================================+=========================================+===============================+
   | Change is visible by querying the node        | ✓                                       |                               |
   +-----------------------------------------------+-----------------------------------------+-------------------------------+
   | Earnings will [not] be restaked automatically | ✓                                       |                               |
   +-----------------------------------------------+-----------------------------------------+-------------------------------+
   | If restaking automatically, the gained        |                                         | ✓                             |
   | stake affects the lottery power               |                                         |                               |
   +-----------------------------------------------+-----------------------------------------+-------------------------------+

When the baker is registered, it will automatically re-stake the earnings, but as
mentioned above, this can be changed by providing the ``--no-restake`` flag to
the ``baker add`` command as shown here:

.. code-block:: console

   $concordium-client baker add baker-keys.json --sender bakerAccount --stake <amountToStake> --out baker-credentials.json --no-restake

Finalization
------------

Finalization is the voting process performed by nodes in the *finalization
committee* that *finalizes* a block when a sufficiently big number of members of
the committee have received the block and agree on its outcome. Newer blocks
must have the finalized block as an ancestor to ensure the integrity of the
chain. For more information about this process, see the
:ref:`finalization<glossary-finalization>` section.

The finalization committee is formed by the bakers that have a certain staked
amount. This specifically implies that in order to participate in the
finalization committee you will probably have to modify the staked amount
to reach said threshold. In the testnet, the staked amount needed to participate
in the finalization committee is **0.1% of the total amount of existing GTU**.

Participating in the finalization committee produces rewards on each block that
is finalized. The rewards are paid to the baker account some time after the
block is finalized.

Removing a baker
================

The controlling account can choose to de-register its baker on the chain. To do
so you have to execute the ``concordium-client``:

.. code-block:: console

   $concordium-client baker remove --sender bakerAccount

This will remove the baker from the baker list and unlock the staked amount on
the baker so that it can be transferred or moved freely.

When removing the baker, the change has the same timeline as decreasing
the staked amount. The change will need *2 + bakerCooldownEpochs* epochs to take effect.
The change becomes visible on the chain as soon as the transaction is included in a block and you
can check when this change will be take effect by querying the account information
with ``concordium-client`` as usual:

.. code-block:: console

   $concordium-client account show bakerAccount
   ...

   Baker #22 to be removed at epoch 275 (2020-12-24 13:56:26 UTC)
    - Staked amount: 20.000000 GTU
    - Restake earnings: yes

   ...

.. table:: Timeline: removing a baker

   +--------------------------------------------+-----------------------------------------+----------------------------------------+
   |                                            | When transaction is included in a block | After *2 + bakerCooldownEpochs* epochs |
   +============================================+=========================================+========================================+
   | Change is visible by querying the node     | ✓                                       |                                        |
   +--------------------------------------------+-----------------------------------------+----------------------------------------+
   | Baker is removed from the baking committee |                                         | ✓                                      |
   +--------------------------------------------+-----------------------------------------+----------------------------------------+

.. warning::

   Decreasing the staked amount and removing the baker cannot be done
   simultaneously. During the cooldown period produced by decreasing the staked
   amount, the baker cannot be removed and vice versa.

Support & Feedback
==================

If you run into any issues or have suggestions, post your question or
feedback on `Discord`_, or contact us at testnet@concordium.com.

